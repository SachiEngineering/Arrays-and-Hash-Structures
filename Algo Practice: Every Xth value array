# /*
# '''
# ❓ PROMPT
# Given an array and a number *X*, return an array containing every *X*th number in the input array.

# Example(s)
# everyXth([1,2,3,4,5,6], 2) == [2,4,6]
# everyXth([1,2,3,4,5,6], 3) == [3,6]
 

# 🔎 EXPLORE
# List your assumptions & discoveries:
 #What should I return when I get empty array? None


# Insightful & revealing test cases:
 

# 🧠 BRAINSTORM
# What approaches could work?
# Algorithm 1:
# Time: O()
# Space: O()
 
 #Iterate through the array starting at the x-1 value. increment the iterator by x and add that to an output arr.

# 📆 PLAN
# Outline of algorithm #: 
 
#  define function  
#   init output arr
#   if empty arr input, return empty arr.
#   for every element from (x-1 to end of arr)
#     append element to output array

#   return output array

# 🛠️ IMPLEMENT
# function everyXth(arr, x) {
# def everyXth(arr: list[int], x: int) -> list[int]:
 
def everyXth(arr: list[int], x: int) -> list[int]:
  outputArr = []
  if arr == []:
    return arr

  i = x-1
  while i<len(arr):
    if (i != 0):
      outputArr.append(arr[i])
      i+=x
  return outputArr

  # 🧪 VERIFY
# Run tests. Methodically debug & analyze issues.

print(everyXth([1,2,3,4,5,6], 2) == [2,4,6])
print(everyXth([1,2,3,4,5,6], 3) == [3,6])
# '''
# */
